#include <iostream>
#include <queue>
using namespace std;
int main()
{
    //    1. Create an empty queue and display its size.
    // queue<int> q;
    //  cout<<"Size of queue: "<<q.size()<<endl;
    // 2. Insert (enqueue) an element into a queue.
    // queue<int> q;
    // q.push(10);
    // cout<<"Element inserted into queue: "<<q.back()<<endl;
    // 3. Remove (dequeue) an element from a queue.
    // queue<int> q;
    // q.push(10);
    // q.pop();
    // cout<<"Element in the queue: "<<q.front()<<endl;

    // 4. Check if a queue is empty.
    // queue<int> q;
    // if(q.empty()){
    //     cout<<"Queue is empty"<<endl;
    // }
    // else{
    //     cout<<"Queue is not empty"<<endl;
    // }
    // 5. Print the front element of the queue.
    // queue<int> q;
    // q.push(10);
    // cout<<"Front elemet :"<<q.front()<<endl;
    // 6. Print the rear element of the queue.
    // queue<int> q;
    // q.push(10);
    // q.push(20);
    // cout<<"front elemet :"<<q.front()<<" and rear :" <<q.back()<<endl;

    // 7. Insert multiple elements into a queue and display them.
    // queue<int> q;
    // q.push(10);
    // q.push(20);
    // q.push(30);

    // cout<<"Queue elements"<<endl;
    // while(!q.empty()){
    //     cout<<q.front()<<" ";
    //     q.pop();
    // }

    // 8. Remove all elements from a queue one by one and display them.
    // queue<int> q;
    // q.push(10);
    // q.push(20);
    // q.push(30);
    // cout<<"Removing elements :"<<endl;
    // while(!q.empty()){
    //     cout<<q.front()<<"-";
    //     q.pop();
    // }
    // cout<<endl;
    // // 9. Check if the queue is empty after removing all elements.
    // if(q.empty()){
    // // cout<<"NOW QUEUE IS EMPTY"<<endl;

    // 9. Find the size of a queue after inserting and removing elements.
    // queue<int> q;
    // q.push(10);
    // q.push(20);
    // q.push(30);
    // cout<<"Size before removing :" <<q.size()<<endl;
    // q.pop();
    // cout<<"Size after removing :" <<q.size()<<endl;
    // 10. Use std::queue from STL and perform basic operations (push, pop, front, size).

    queue<int> q;
    q.push(5);
    q.push(15);
    q.push(25);

    cout << "Front element :" << q.front() << endl;
    cout << "Queue size :" << q.size() << endl;

    q.pop();

    cout << "Front element after pop :" << q.front() << endl;
    cout << "Queue size after pop :" << q.size() << endl;

    return 0;
}
